{"version":3,"sources":["TodoContext/index.js","TodoContext/useLocalStorage.js","TodoCounter/index.js","TodoSearch/index.js","TodoList/index.js","TodoItem/index.js","CreateTodoButton/index.js","Modal/index.js","TodoForm/index.js","App/AppUI.js","App/Index.js","reportWebVitals.js","index.js"],"names":["TodoContext","React","createContext","TodoProvider","props","itemName","initialValue","useState","error","setError","loading","setLoading","item","setItem","useEffect","setTimeout","parsedItem","localStorageItem","localStorage","getItem","JSON","parse","stringify","saveItem","newItem","stringifiedItem","useLocalStorage","todos","saveTodos","searchValue","setSearchValue","openModal","setOpenModal","completedTodos","filter","todo","completed","length","totalTodos","searchedTodos","todoText","text","toLowerCase","searchText","includes","Provider","value","completeTodo","todoIndex","findIndex","newTodos","deleteTodo","splice","addTodo","push","children","TodoCounter","useContext","className","TodoSearch","placeholder","onChange","event","console","log","target","TodoList","TodoItem","onClick","onComplete","onDelete","CreateTodoButton","prevState","Modal","ReactDOM","createPortal","document","getElementById","TodoForm","newTodoValue","setNewTodoValue","onSubmit","preventDefault","type","AppUI","Fragment","map","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","render","StrictMode","Index"],"mappings":"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","file":"static/js/main.8774c9f9.chunk.js","sourcesContent":["import React from 'react';\nimport {useLocalStorage} from './useLocalStorage';\n\nconst TodoContext = React.createContext();\n\nfunction TodoProvider(props) {\n    const {\n        item: todos,\n        saveItem: saveTodos,\n        loading,\n        error,\n    } = useLocalStorage('TODOS_V1', []);\n    const [searchValue, setSearchValue] = React.useState('');\n    const [openModal, setOpenModal] = React.useState(false);\n\n    const completedTodos = todos.filter(todo => !!todo.completed).length;\n    const totalTodos = todos.length;\n\n    let searchedTodos = [];\n\n    if (!searchValue.length >= 1) {\n        searchedTodos = todos;\n    } else {\n        searchedTodos = todos.filter(todo => {\n            const todoText = todo.text.toLowerCase();\n            const searchText = searchValue.toLowerCase();\n            return todoText.includes(searchText);\n        });\n    }\n\n    const completeTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos[todoIndex].completed = true;\n        saveTodos(newTodos);\n    };\n\n    const deleteTodo = (text) => {\n        const todoIndex = todos.findIndex(todo => todo.text === text);\n        const newTodos = [...todos];\n        newTodos.splice(todoIndex, 1);\n        saveTodos(newTodos);\n    };\n\n    const addTodo = (text) => {\n        const newTodos = [...todos];\n        newTodos.push({\n            completed: false,\n            text,\n        });\n        saveTodos(newTodos);\n    };\n\n    return (\n        <TodoContext.Provider value={{\n            loading,\n            error,\n            totalTodos,\n            completedTodos,\n            searchValue,\n            setSearchValue,\n            searchedTodos,\n            completeTodo,\n            deleteTodo,\n            openModal,\n            setOpenModal,\n            addTodo\n        }}>\n            {/*con props children retornamos el componente que viene entre las props\n            @ ejemplo\n            <TodoProvider>\n                este es el componente<AppUI />\n         </TodoProvider>\n            */}\n            {props.children}\n        </TodoContext.Provider>\n    );\n}\n\nexport {TodoContext, TodoProvider};\n","import React from \"react\";\n\nfunction useLocalStorage(itemName, initialValue) {\n    const [error, setError] = React.useState(false);\n    const [loading, setLoading] = React.useState(true);\n    const [item, setItem] = React.useState(initialValue);\n\n    React.useEffect(() => {\n        setTimeout(() => {\n            try {\n                const localStorageItem = localStorage.getItem(itemName);\n                let parsedItem;\n\n                if (!localStorageItem) {\n                    localStorage.setItem(itemName, JSON.stringify(initialValue));\n                    parsedItem = initialValue;\n                } else {\n                    parsedItem = JSON.parse(localStorageItem);\n                }\n\n                setItem(parsedItem);\n                setLoading(false);\n            } catch (error) {\n                setError(error);\n            }\n        }, 1000);\n    });\n    //SETEA EL ESTADO DEL ITEM\n    const saveItem = (newItem) => {\n        try {\n            const stringifiedItem = JSON.stringify(newItem);\n            localStorage.setItem(itemName, stringifiedItem);\n            setItem(newItem);\n        } catch (error) {\n            setError(error);\n        }\n    };\n\n    /*Se retorna los valores que se van a utilizar en el component*/\n\n    return {\n        item,\n        saveItem,\n        loading,\n        error,\n    };\n}\n\nexport {useLocalStorage}\n","import React from 'react';\nimport './TodoCounter.css';\nimport {TodoContext} from \"../TodoContext\";\n\nfunction TodoCounter() {\n    const {totalTodos, completedTodos} = React.useContext(TodoContext)\n    return (\n        <h2 className=\"TodoCounter\">Has completado {completedTodos} de {totalTodos} TODOs</h2>\n    );\n}\n\nexport {TodoCounter};\n","import React from 'react';\nimport './TodoSearch.css';\nimport {TodoContext} from \"../TodoContext\";\n\nfunction TodoSearch() {\n\n    const {searchValue, setSearchValue} = React.useContext(TodoContext)\n\n    const onSearchValueChange = (event) => {\n        console.log(event.target.value)\n        setSearchValue(event.target.value)\n    }\n    return (\n        <input\n            className=\"TodoSearch\"\n            placeholder=\"Cebolla\"\n            value={searchValue}\n            onChange={onSearchValueChange}\n        />\n    )\n\n}\n\nexport {TodoSearch};\n","import React from 'react';\nimport './TodoList.css'\nconst TodoList = (props) => {\n    return (\n        <section>\n            <ul>\n                {props.children}\n            </ul>\n        </section>\n    );\n};\n\nexport {TodoList};\n","import React from 'react';\nimport './TodoItem.css';\n\nfunction TodoItem(props) {\n    return (\n        <li className=\"TodoItem\">\n      <span onClick={props.onComplete} className={`Icon Icon-check ${props.completed && 'Icon-check--active'}`}>\n        ?\n      </span>\n            <p className={`TodoItem-p ${props.completed && 'TodoItem-p--complete'}`}>\n                {props.text}\n            </p>\n            <span onClick={props.onDelete} className=\"Icon Icon-delete\">\n        X\n      </span>\n        </li>\n    );\n}\n\nexport {TodoItem};\n","import React from 'react';\nimport './CreateTodoButton.css';\n\nfunction CreateTodoButton(props) {\n    const onClickButton = () => {\n        props.setOpenModal(prevState => !prevState);\n    };\n    return (\n        <button className=\"CreateTodoButton\" onClick={onClickButton}>+</button>\n    );\n}\n\nexport {CreateTodoButton};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './Modal.css';\n\nfunction Modal({ children }) {\n    return ReactDOM.createPortal(\n        <div className=\"ModalBackground\">\n            {children}\n        </div>,\n        document.getElementById('modal')\n    );\n}\n\nexport { Modal };\n","import React from 'react';\nimport { TodoContext } from '../TodoContext';\nimport './TodoForm.css';\n\nfunction TodoForm() {\n    const [newTodoValue, setNewTodoValue] = React.useState('');\n    const {\n        addTodo,\n        setOpenModal,\n    } = React.useContext(TodoContext);\n\n    const onChange = (event) => {\n        setNewTodoValue(event.target.value);\n    };\n    const onCancel = () => {\n        setOpenModal(false);\n    };\n    const onSubmit = (event) => {\n        event.preventDefault();\n        addTodo(newTodoValue);\n        setOpenModal(false);\n    };\n\n    return (\n        <form onSubmit={onSubmit}>\n            <label>Escribe tu nuevo TODO</label>\n            <textarea\n                value={newTodoValue}\n                onChange={onChange}\n                placeholder=\"Cortar la cebolla oara el almuerzo\"\n            />\n            <div className=\"TodoForm-buttonContainer\">\n                <button\n                    type=\"button\"\n                    className=\"TodoForm-button TodoForm-button--cancel\"\n                    onClick={onCancel}\n                >\n                    Cancelar\n                </button>\n                <button\n                    type=\"submit\"\n                    className=\"TodoForm-button TodoForm-button--add\"\n                >\n                    A�adir\n                </button>\n            </div>\n        </form>\n    );\n}\n\nexport { TodoForm };\n","import React from 'react';\nimport {TodoCounter} from '../TodoCounter';\nimport {TodoSearch} from '../TodoSearch';\nimport {TodoList} from '../TodoList';\nimport {TodoItem} from '../TodoItem';\nimport {CreateTodoButton} from '../CreateTodoButton';\nimport {TodoContext} from \"../TodoContext\";\nimport {Modal} from \"../Modal\";\nimport {TodoForm} from \"../TodoForm\";\n\nfunction AppUI() {\n    {/*importamos el contexto para utilizar los valores que estan */\n    }\n    const {\n        error,\n        loading,\n        searchedTodos,\n        completeTodo,\n        deleteTodo,\n        openModal,\n        setOpenModal\n    } = React.useContext(TodoContext)\n    return (\n        <React.Fragment>\n            <TodoCounter/>\n            <TodoSearch/>\n            <TodoList>\n                {error && <p>Desesp�rate, hubo un error...</p>}\n                {loading && <p>Estamos cargando, no desesperes...</p>}\n                {(!loading && !searchedTodos.length) && <p>�Crea tu primer TODO!</p>}\n\n                {searchedTodos.map(todo => (\n                    <TodoItem\n                        key={todo.text}\n                        text={todo.text}\n                        completed={todo.completed}\n                        onComplete={() => completeTodo(todo.text)}\n                        onDelete={() => deleteTodo(todo.text)}\n                    />\n                ))}\n            </TodoList>\n            {!!openModal &&\n            <Modal>\n                <TodoForm/>\n            </Modal>\n\n            }\n\n            <CreateTodoButton openModal={openModal} setOpenModal={setOpenModal}/>\n\n        </React.Fragment>\n    );\n}\n\nexport {AppUI};\n","import React from 'react';\nimport {AppUI} from './AppUI';\nimport {TodoProvider} from \"../TodoContext\";\n\n\n\n\nfunction App() {\n    return (\n        <TodoProvider>\n            <AppUI />\n        </TodoProvider>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Index from './App/Index';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Index />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}